services:
 backend:
   build:
     context: ./backend
     dockerfile: Dockerfile
     args:
       - GEMINI_API_KEY=${GEMINI_API_KEY}
   container_name: fastapi_app
   restart: always
   environment:
     - GEMINI_API_KEY=${GEMINI_API_KEY}
     - QDRANT_HOST=qdrant
     - QDRANT_PORT=6333
     - QDRANT_COLLECTION_NAME=ASC_Chatbot
     - DENSE_EMBEDDING=vankha/asc_embedding
     - SPARSE_EMBEDDING=Qdrant/bm42-all-minilm-l6-v2-attentions
     - FASTAPI_HOST=0.0.0.0
     - FASTAPI_PORT=5000
     - FASTAPI_DEBUG=True
     - PYTHONPATH=/app
     - WAIT_HOSTS=qdrant:6333
     - WAIT_TIMEOUT=300
   ports:
     - "5000:5000"
   depends_on:
     qdrant:
       condition: service_healthy
   networks:
     - app_network

 frontend:
   build:
     context: ./frontend
     dockerfile: Dockerfile
   ports:
     - "80:80"
   container_name: frontend_app
   environment:
     - REACT_APP_API_URL=http://backend:5000
   networks:
     - app_network

 qdrant:
   image: qdrant/qdrant:latest
   restart: always
   container_name: qdrant
   ports:
     - "6333:6333"
     - "6334:6334"
   expose:
     - 6333
     - 6334
     - 6335
   volumes:
     - ./qdrant_data:/qdrant/storage
   healthcheck:
     test: ["CMD-SHELL", "curl", "-f", "http://localhost:6333/collections || exit 1"]
     interval: 30s
     timeout: 10s
     retries: 5
   networks:
     - app_network

networks:
 app_network:
   driver: bridge